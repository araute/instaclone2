type User @model @auth(rules: [{allow: public}]) {
    id: ID!
    name: String
    email: String
    addresses: AWSJSON
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
}

type FoodCategory @model @auth(rules: [{allow: public}]){
    id: ID!,
    type: String!,
    products: [Product] @connection (name: "ProductCategory", fields: ["id"])
}

type Product @model @auth(rules: [{allow: public}]) {
    id: ID!
    name: String!
    categoryID: ID!
    description: String!
    primaryImage: String
    images: [String]
    category: FoodCategory @connection(name:"ProductCategory", fields:["categoryID"])
    atLocations: [LocationMenu] @connection(name: "ProductLocations", fields: ["id"])
    atCarts : [CartProduct] @connection (name: "CartProduct", fields:["id"] )
}

type Location @model @auth(rules: [{allow: public}]) {
    id: ID!
    name: String!
    street: String!
    unit: String
    city: String!
    state: String!
    zip: String!
    phone: String!
    latitude: Float!
    longitude: Float!
    menuLocations: [LocationMenu] @connection(name: "Locations", fields: ["id"])
}

type LocationMenu @model @auth(rules: [{allow: public}]) {
    id: ID!
    locationID: ID!
    productID: ID!
    location: Location @connection(name: "Locations", fields: ["locationID"])
    product: Product @connection(name: "ProductLocations", fields: ["productID"])
    price: Float!
    Stock: Float!
}

type CartProduct @model @auth(rules: [{allow: public}]) {
    id: ID!
    userSub: String!
    quantity: Int!
    productID: ID!
    product: Product @connection(name :"CartProduct", fields: ["productID"])
}

type OrderProduct @model @auth(rules: [{allow: public}]) {
    id: ID!
    quantity: Int!
    option: String
    productID: ID!
    product: Product @connection(fields: ["productID"])
    orderID: ID!
    order: Order @connection(fields: ["orderID"])
}

type Order @model @auth(rules: [{allow: public}]) {
    id: ID!
    userSub: String!
    fullName: String!
    phoneNumber: String
    country: String
    city: String
    address: String
}
